pipeline{

	agent {label 'linux'}

	environment {
		DOCKERHUB_CREDENTIALS=credentials('santoshahirwar-dockerhub')
	}

	stages {
	    
	    stage('gitclone') {

			steps {
				git 'https://github.com/aayanshahirwar/my-static-website.git'
			}
		}

		stage('Build') {

			steps {
				sh 'docker build -t santoshahirwar/reactstatic_test:latest .'
			}
		}

		stage('Login') {

			steps {
				sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
			}
		}

		stage('Push') {

			steps {
				sh 'docker push santoshahirwar/reactstatic_test:latest'
			}
		}
	}

	post {
		always {
			sh 'docker logout'
		}
	}

=======
pipeline {
    agent { label 'linux' }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('santosh-dockerhub')
    }

    stages {
        stage('Check Repository') {
            steps {
                script {
                    // First check if the repo exists and what branches are available
                    sh '''
                        git ls-remote --heads https://github.com/aayanshahirwar/my-static-website.git
                        echo "Available branches:"
                        git ls-remote --heads https://github.com/aayanshahirwar/my-static-website.git | cut -f2 | cut -d'/' -f3
                    '''
                }
            }
        }

        stage('gitclone') {
            steps {
                git(
                    url: 'https://github.com/aayanshahirwar/my-static-website.git',
                    branch: 'main', // Try 'main' if 'master' doesn't work
                    changelog: true,
                    poll: true
                )
            }
        }

        stage('Build') {
            steps {
                sh 'docker build -t santoshahirwar/reactstatic_test:latest .'
            }
        }

        stage('Login') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }

        stage('Push') {
            steps {
                sh 'docker push santoshahirwar/reactstatic_test:latest'
            }
        }
    }

    post {
        always {
            sh 'docker logout'
        }
    }
>>>>>>> origin/main
}
